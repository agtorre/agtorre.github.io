<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Aaron Torres</title>
    <link>http://www.aaron-torres.com/tags/development/</link>
    <description>Recent content in Development on Aaron Torres</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Jun 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.aaron-torres.com/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Go Handlers and State</title>
      <link>http://www.aaron-torres.com/post/handlers-and-state/</link>
      <pubDate>Sun, 14 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.aaron-torres.com/post/handlers-and-state/</guid>
      <description>&lt;p&gt;Today I&amp;rsquo;d like to get a bit technical about things I&amp;rsquo;ve been learning and working on in the Go language&lt;/p&gt;

&lt;p&gt;Sometimes it&amp;rsquo;s helpful to pass additional state into a &lt;a href=&#34;http://golang.org/pkg/net/http/#HandlerFunc&#34;&gt;web handler function&lt;/a&gt;. For all the examples below, lets assume you want to have a toggle
for authentication that is checked once within the handler function. These functions have a specific signature and make it difficult to both add parameters and remain compatible with other libraries.
There are many ways to accomplish this, including middleware with some combination of &lt;a href=&#34;https://github.com/codegangsta/negroni&#34;&gt;middleware&lt;/a&gt; and &lt;a href=&#34;http://www.gorillatoolkit.org/pkg/context&#34;&gt;context&lt;/a&gt; libraries.
This has the advantage of allowing each request to modify the stored context value without interfering with other handlers. It&amp;rsquo;s a bit complicated if you happen to forget to turn on the middleware
and requires a diligent programmer to not hit panics inside the handler by implementing functions like DoAuth below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type key int

const AuthKey key = 0

func UseAuth(w http.ResponseWriter, r *http.Request, next http.HandlerFunc){
    context.Set(r, AuthKey, true)
    next(w, r)
    context.Clear(r)
}

func DoAuth(r *http.Request)(bool, error){
    // in case middle-ware isn&#39;t turned on...
    if doAuth, ok := context.Get(r, AuthKey); ok{
        return doAuth, nil
    }
    return false, errors.New(&amp;quot;middleware off&amp;quot;)
}

func AllTheInfo(w http.ResponseWriter, r *http.Request){
    if doAuth, err := DoAuth(r); err == nil &amp;amp;&amp;amp; doAuth{
        // do something here
    }
}

func main(){
    n := negroni.New()
    n.Use(UseAuth)

    mux = http.NewServeMux()
    mux.HandleFunc(&amp;quot;/&amp;quot;, AllTheInfo)

    n.UseHandler(mux)
    n.Run(&amp;quot;:8000&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A simpler, but potentially less flexible approach is to use controllers. It&amp;rsquo;s important to remember and keep in mind that
controller variables should not be modified inside the handler as it will modify the controller for all other handlers that make use of it. For example, it may seem tempting to set some state
based on the current request, but this is not recommended out of the box. Some examples of packages that get around this limitation by creating a controller each request include &lt;a href=&#34;https://github.com/gocraft/web&#34;&gt;gocraft/web&lt;/a&gt;
and this &lt;a href=&#34;https://github.com/codegangsta/controller&#34;&gt;controller&lt;/a&gt; library.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Controller struct{
    DoAuth bool
}

func (c *Controller) AllTheInfo(w http.ResponseWriter, r *http.Request){
    if c.DoAuth{
        // do something here
    }
}

func main(){
    c := &amp;amp;Controller{DoAuth: true}
    http.HandleFunc(&amp;quot;/&amp;quot;, c.AllTheInfo)
    http.ListenAndServe(&amp;quot;:8000&amp;quot;, nil)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, a very light-weight approach I like to make use of is closures. Closures allow the state to be modified from within the handler and are also granular enough that you can tweak them for every route
without initializing additional controllers or wrapping every route with middleware incurring context look-up and reflection overhead.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func CheckAllTheInfo(DoAuth bool) func(w ResponseWriter, r *Request){
    return func(w ResponseWriter, r *Request){
        if DoAuth{
            // do something here
        }
    }
}

func main(){
    http.HandleFunc(&amp;quot;/&amp;quot;, CheckAllTheInfo(true))
    http.ListenAndServe(&amp;quot;:8000&amp;quot;, nil)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Overall, there&amp;rsquo;s a lot of ways to accomplish injecting state for web handler functions in Go. There are a number of other middleware packages besides negroni and there are even context objects
build into the &lt;a href=&#34;https://godoc.org/golang.org/x/net/context&#34;&gt;standard library&lt;/a&gt; now. I use combinations of all of these as one doesn&amp;rsquo;t scratch all the itches I have. You can also combine these, for example
you could attach a context object to a controller that is safe to modify or wrap a controller method in a closure.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Off the Rails with Rails</title>
      <link>http://www.aaron-torres.com/post/off-the-rails-with-rails/</link>
      <pubDate>Tue, 09 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.aaron-torres.com/post/off-the-rails-with-rails/</guid>
      <description>&lt;p&gt;&amp;ldquo;Why don&amp;rsquo;t you just use strong parameters?&amp;rdquo; said the guy.&lt;/p&gt;

&lt;p&gt;I was feeling pretty annoyed. The conversation up until this point had already been rocky. The term strong parameters could refer to some yet unknown Go concept, it could refer to a general computer science term (strongly typed parameters?), or it could refer to some other technology I&amp;rsquo;m yet unfamiliar with. In my mind, my knowledge was being challenged. I had a hunch based on his background, that he was referring to something in Rails. I took this as a personal challenge to learn all that I can about it. Nothing is more frustrating to me in software development than finding I&amp;rsquo;ve been operating with a big gap in my knowledge and I wanted to determine if I was missing anything else.&lt;/p&gt;

&lt;p&gt;Web micro services are becoming more and more common. Deploying these services in the cloud using technology like Docker allow software to scale like crazy. This is especially true for apps written in languages Go or JavaScript on Node.js. It is an odd time look back at older, more monolithic stacks like Rails or Django. An odd time maybe, but my side projects right now are all about passion in the moment.&lt;/p&gt;

&lt;p&gt;And, I learned some pretty cool things. Rails apps make it easy to generate CRUD and actually seem to make it a pleasure doing so. My wife assures me that normally CRUD is quite unpleasant and that I should enjoy it while it&amp;rsquo;s in an upswing. Many times I&amp;rsquo;ve found myself writing tons of boiler plate hooking up services in Go to deploy a simple RESTFul API. I&amp;rsquo;ve also found that no web framework in Go fits &lt;em&gt;Just Right&lt;/em&gt;, so I&amp;rsquo;m often reinventing the wheel and gluing together components ranging from OAuth2 Server Libraries, to CSRF middleware that plug into one of the many &lt;strong&gt;many&lt;/strong&gt; Go middleware implementations. Or, I find myself wondering why the two most popular Go routers fail to solve a number of simple problems. As far as I can tell, so far, Rails does all of this out of the box. Now, I&amp;rsquo;m not prepared to migrate large swaths of Go micro services to Rails, but I&amp;rsquo;m finding some things in Rails that I do find attractive.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Looking and Moving Forward</title>
      <link>http://www.aaron-torres.com/post/moving-forward/</link>
      <pubDate>Sun, 05 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.aaron-torres.com/post/moving-forward/</guid>
      <description>

&lt;p&gt;I wanted to start this year off with a new blog built on top of Github Pages
and Jekyll, and a look back on what went well (and didn&amp;rsquo;t) in 2013.&lt;/p&gt;

&lt;h3 id=&#34;the-job:cec6d66b02f6bce7b2edf2e0a5db0bb8&#34;&gt;The Job&lt;/h3&gt;

&lt;p&gt;The single biggest event of this year was completely uprooting our lives, packing up, and leaving the state. We did this with a car full of a few clothes, a box of important documents, a laptop, 1 cat, 1 dog, 1 baby, and 2 adult humans. We had basically lived in New Mexico our entire lives and we left behind two houses and everyone we knew in order to pursue new opportunities in Seattle. This decision was made with less than a month of notice, but not without enormous scrutiny and worry.&lt;/p&gt;

&lt;h3 id=&#34;fears:cec6d66b02f6bce7b2edf2e0a5db0bb8&#34;&gt;Fears&lt;/h3&gt;

&lt;p&gt;The best way I can describe this entire ordeal is terrifying. Imagine
completely leaving any comfort zone that you&amp;rsquo;ve created in order to pursue
something nearly completely unknown. The next way I&amp;rsquo;d describe it is
liberating. There&amp;rsquo;s something incredible about being able to pickup and move
anywhere. However these were the gambles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Leaving a job I was very good at and all the security that came with it&lt;/li&gt;
&lt;li&gt;Downsizing from a large house that we owned into an apartment&lt;/li&gt;
&lt;li&gt;Selling that house in a reasonable amount of time&lt;/li&gt;
&lt;li&gt;Getting rid of a lot of our stuff as quickly as possible&lt;/li&gt;
&lt;li&gt;Finding an apartment near my new job blindly that also accepts pets and has enough room for us&lt;/li&gt;
&lt;li&gt;Financing this whole ordeal&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;how-d-that-work-out:cec6d66b02f6bce7b2edf2e0a5db0bb8&#34;&gt;How&amp;rsquo;d that work out?&lt;/h3&gt;

&lt;p&gt;The good news is, we had to get lucky 2-3 times in order to pull it off , and we nailed all of em. We got an offer on the house the same day we listed it,
and sold it shortly after. We also had a successful yard sale where we
sold most of what we owned. We made the drive across the country in 3 days, and
we&amp;rsquo;ve settled in here so far! Our finances have stabilized, and
we&amp;rsquo;re already seeing the benefits of living in the Pacific Northwest.&lt;/p&gt;

&lt;p&gt;I really wanted to write a post about this during that frantic period, but that
would have made it even worse at the time. There&amp;rsquo;s so much more detail about
each of these individual events, but that&amp;rsquo;s best left for another time. If
you&amp;rsquo;re ever interested, come have a beer or coffee with me and we can chat
about it.&lt;/p&gt;

&lt;h3 id=&#34;2014:cec6d66b02f6bce7b2edf2e0a5db0bb8&#34;&gt;2014&lt;/h3&gt;

&lt;p&gt;Without further ado, lets talk about what my plans are for this year. The theme
shared by these is that I&amp;rsquo;d like to try and build a personal brand. Now that
I&amp;rsquo;m less rooted, it&amp;rsquo;s important that I publicize and adapt wherever possible.
Having said that here&amp;rsquo;s the plan:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I want to publish multiple open source projects.&lt;/li&gt;
&lt;li&gt;I want to actively work on 1 bigger and already established open source
project&lt;/li&gt;
&lt;li&gt;I want to register aaron-torres.com, use it to build a personal portfolio
complete with blog, code, resume, etc.&lt;/li&gt;
&lt;li&gt;I want to write 2 blog posts a week&lt;/li&gt;
&lt;li&gt;I want to publish 3 Android applications (which includes learning Android)&lt;/li&gt;
&lt;li&gt;I want to work on a web application for my own personal business&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is a LOT to do in a short amount of time, however, I&amp;rsquo;m already off to a
running start.&lt;/p&gt;

&lt;h3 id=&#34;what-s-been-done:cec6d66b02f6bce7b2edf2e0a5db0bb8&#34;&gt;What&amp;rsquo;s been done.&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;ve hit the ground running, lets get to it:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Registered aaron-torres.com (hopefully you&amp;rsquo;re reading it right now). Started
redoing my resume and will have everything up soon&lt;/li&gt;
&lt;li&gt;Published gocolorize, an ANSI color library
&lt;a href=&#34;https://github.com/agtorre/gocolorize&#34;&gt;https://github.com/agtorre/gocolorize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Started contributing to the Revel Go framework
(&lt;a href=&#34;http://robfig.github.io/revel/&#34;&gt;http://robfig.github.io/revel/&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;if-you-d-like-to-read-more:cec6d66b02f6bce7b2edf2e0a5db0bb8&#34;&gt;If You&amp;rsquo;d Like to Read More.&lt;/h3&gt;

&lt;p&gt;Drop me a line! Star my projects on Github. I hope that I can slowly make
myself into a content provider where the things I share are interesting and
helpful. I appreciate you take the time to read this far, and I hope that I hold
your interest.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>